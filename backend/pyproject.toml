[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[project]
name = "curriculum-curator-backend"
version = "0.1.0"
description = "Pedagogically-aware course content platform backend"
readme = "../README.md"
license = {text = "MIT"}
authors = [
    {name = "Curriculum Curator Team"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
]
requires-python = ">=3.12"
dependencies = [
    # Core FastAPI dependencies
    "fastapi>=0.109.0",
    "uvicorn[standard]>=0.27.0",
    "python-multipart>=0.0.6",
    # Essential uvicorn dependencies
    "click>=8.1.7",
    "h11>=0.14.0",
    "httptools>=0.6.1",
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0.1",
    "watchfiles>=0.21.0",
    "websockets>=12.0",
    "uvloop>=0.19.0; sys_platform != 'win32'",
    # Authentication & Security
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "bcrypt>=4.1.2",
    "cryptography>=41.0.7",
    "slowapi>=0.1.9", # Rate limiting
    "redis>=5.0.1", # Rate limiting storage (optional)
    # Database
    "sqlalchemy>=2.0.25",
    "alembic>=1.13.1",
    # Configuration & Validation
    "pydantic>=2.5.3",
    "pydantic-settings>=2.1.0",
    # File handling
    "aiofiles>=23.2.1",
    # LLM Integration
    "langchain>=0.1.0",
    "openai>=1.6.1",
    "anthropic>=0.8.1",
    "tiktoken>=0.5.2",
    # File Processing
    "python-docx>=1.1.0",
    "python-pptx>=0.6.23",
    "markdown>=3.5.1",
    "PyPDF2>=3.0.1",
    # Email functionality
    "fastapi-mail>=1.4.1",
    # HTTP client for external APIs
    "httpx>=0.25.2",
    "requests>=2.31.0",
    # Typing extensions
    "typing-extensions>=4.9.0",
    "fastapi-csrf-protect>=1.0.3",
    "psutil>=7.0.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.0.0",
    "httpx>=0.25.2",  # for testing FastAPI
    
    # Linting and formatting
    "ruff>=0.1.0",
    
    # Type checking
    "basedpyright>=1.8.0",
    
    # Development tools
    "pre-commit>=3.6.0",
]

[project.urls]
Homepage = "https://github.com/curriculum-curator/curriculum-curator"
Repository = "https://github.com/curriculum-curator/curriculum-curator"
Issues = "https://github.com/curriculum-curator/curriculum-curator/issues"

[project.scripts]
curriculum-curator = "app.main:main"

[dependency-groups]
dev = [
    "basedpyright>=1.31.1",
    "ruff>=0.12.8",
]

# Ruff configuration
[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "A",   # flake8-builtins
    "C4",  # flake8-comprehensions
    "PIE", # flake8-pie
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
    "PL",  # pylint
    "TRY", # tryceratops
    "FLY", # flynt
    "PERF", # perflint
    "RUF", # ruff-specific rules
]
ignore = [
    "E501",    # line too long, handled by formatter
    "PLR0913", # too many arguments
    "PLR0915", # too many statements
    "PLR2004", # magic value used in comparison
    "TRY003",  # avoid specifying long messages outside exception class
    "B008",    # function call in argument defaults - standard FastAPI pattern
    "TRY300",  # consider moving return to else block
    "TRY301",  # abstract raise to inner function
    "B904",    # raise from within except - acceptable in this context
    "ARG001",  # unused function arguments
    "ARG002",  # unused method arguments
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "migrations",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["app"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["S101", "PLR2004", "ARG"]
"test_*.py" = ["S101", "PLR2004", "ARG", "PTH", "W293", "F401", "RET505", "W292", "W291", "I001"]
"app/core/database.py" = ["F401", "PLC0415"]  # SQLAlchemy model imports must be inside function
"migrations/**/*" = ["F401", "ERA001", "W291", "UP035", "I001"]  # Migration files have specific patterns

# Pytest configuration
[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-branch",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "e2e: marks tests as end-to-end tests",
]
asyncio_mode = "auto"

# Coverage configuration
[tool.coverage.run]
source = ["app"]
branch = true
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Basedpyright configuration
[tool.basedpyright]
include = ["app"]
exclude = [
    "**/__pycache__",
    "**/node_modules",
    "**/.venv",
    "**/venv",
]
venvPath = "."
venv = ".venv"
pythonVersion = "3.12"
pythonPlatform = "Linux"
typeCheckingMode = "strict"
reportMissingImports = false
reportMissingTypeStubs = false
reportUnknownParameterType = false
reportUnknownMemberType = false
reportUnknownArgumentType = false
reportUnknownVariableType = false
reportCallInDefaultInitializer = false
reportGeneralTypeIssues = false
reportArgumentType = false
reportOptionalMemberAccess = false
reportUnusedVariable = false
reportDeprecated = false
reportMissingTypeArgument = false
reportMissingParameterType = false
reportCallIssue = false
reportReturnType = false
reportAttributeAccessIssue = false
reportUnusedImport = false
reportDuplicateImport = true
reportOptionalSubscript = true
reportPrivateUsage = true
reportConstantRedefinition = true
reportIncompatibleMethodOverride = true
reportIncompatibleVariableOverride = true
reportOverlappingOverload = true
reportUntypedFunctionDecorator = false
reportUntypedClassDecorator = false
reportUntypedBaseClass = true
reportUntypedNamedTuple = true
reportImplicitStringConcatenation = true
reportUnboundVariable = true
reportInvalidStubStatement = true
